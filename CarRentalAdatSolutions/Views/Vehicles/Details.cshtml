@model CarRentalAdatSolutions.Models.VehicleModelView
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = Model.vehicle.make + " " + Model.vehicle.make;
}


@{
    string convertToBase64(byte[] image)
    {
        var base64 = Convert.ToBase64String(image);
        return String.Format("data:image/gif;base64,{0}", base64);

    }
}

@section Css{
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="~/Content/star-rating.css" rel="stylesheet" />
    <link href="~/Content/SetupWizard/css/smart_wizard_theme_circles.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/SetupWizard/css/smart_wizard_theme_arrows.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/SetupWizard/css/smart_wizard_theme_dots.css" rel="stylesheet" type="text/css" />
    <link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />
}


<div class="container" style="  padding-top: 10.6rem;">
    <div class="row">
        <div class="col-md-8">
            <div class="car-details-content">
                <!--- slide-->
                @*<h2>@Model.vehicle.make - @Model.vehicle.model<span class="price">Rent: <b>@string.Format("{0:C}", int.Parse(Model.vehicle.RentalPrice)) / Day</b></span></h2>*@


                @{
                    var imgSrc = "";

                    if (Model.vehicle.Images.Count > 0)
                    {
                        var base64 = Convert.ToBase64String(Model.vehicle.Images.First().ImagePath);
                        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                    }
                    else
                    {
                        imgSrc = Model.vehicle.ImageUrl;
                    }
                    if (Model.vehicle.Images.Count() > 0)
                    {
                        <div class="car-preview-crousel">
                            <div class="single-car-preview">
                                <img src="@imgSrc" alt="JSOFT">
                            </div>
                            @{
                                if (Model.vehicle.Images.Count() > 0)
                                {
                                    foreach (var img in Model.vehicle.Images)
                                    {
                                        <div class="single-car-preview">
                                            <img src="@convertToBase64(img.ImagePath)" alt="JSOFT">
                                        </div>
                                    }
                                }
                            }

                        </div>


                    }
                    else
                    {
                        //display one image
                        <div class="single-car-preview">
                            <img src="@imgSrc" alt="JSOFT">
                        </div>
                    }
                }

                @{

                    if (!Model.vehicle.isBooked && Model.vehicle.Dealer.Email != User.Identity.Name)
                    {
                        <a class="rent-btn" id="book-button" style="color:#ffffff;cursor:pointer" data-toggle="modal" data-target="#exampleModal">Book now</a>

                    }
                    else if (User.IsInRole("Dealer"))
                    {
                        <div class="alert alert-warning">You are the dealer of this vehicle, therefore you cannot book it.</div>
                    }


                    @*if (User.Identity.IsAuthenticated)
            {
                bool watching = false;
                var count = Model.vehicle.watchLists.Count; if (count > 0)
                {
                    foreach (var w in Model.vehicle.watchLists)
                    {
                        if (w.userId == User.Identity.GetUserId())
                        {
                            //user is watching
                            watching = true;
                        }
                    }

                    if (User.Identity.IsAuthenticated && Model.vehicle.Dealer.Email != User.Identity.Name)
                    {
                        if (watching)
                        {
                            <button class="btn btn-secondary btn-sm" style="background-color:cadetblue" value="unwatch" id="switch" onclick="watch(@Model.vehicle.Id)">Unwatch</button>
                        }
                        else
                        {
                            <button class="btn btn-primary btn-sm" style="background-color:cadetblue" value="watch" id="switch" onclick="watch(@Model.vehicle.Id)">Watch</button>
                        }
                    }
                    else
                    {
                        <button class="btn btn-primary btn-sm" style="background-color:cadetblue" value="watch" id="switch" onclick="watch(@Model.vehicle.Id)">Watch</button>
                    }
                }

            }*@
                }



                @{ if (Model.vehicle.isBooked)
                    {
                        <div class="alert alert-info">The vehicle is currently booked and will be available after <b>@Model.vehicle.BookingList.Last().ReturnDate.ToString("MMM dd, yyyy")</b></div>
                    }
                }
                <div class="car-details-info">
                    <h4>Additional Info</h4>

                    <p>@Model.vehicle.Description</p>
                    <div class="technical-info">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="tech-info-table">
                                    <table class="table table-bordered">
                                        <tr>
                                            <th>MAKE</th>
                                            <td>@Model.vehicle.make.ToString().ToUpper()</td>
                                        </tr>
                                        <tr>
                                            <th>YEAR</th>
                                            <td>@Model.vehicle.year.ToString().ToUpper()</td>
                                        </tr>
                                        <tr>
                                            <th>REG NUMBER</th>
                                            <td>@Model.vehicle.RegNumber.ToString().ToUpper()</td>
                                        </tr>
                                        <tr>
                                            <th>RENTAL COST</th>
                                            <td>@string.Format("{0:C}", Int32.Parse(Model.vehicle.RentalPrice))</td>
                                        </tr>
                                        <tr>
                                            <th>FUEL TYPE</th>
                                            <td>@Model.vehicle.FuelType</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>

                            <div class="col-lg-6">
                                <div class="tech-info-table">
                                    <table class="table table-borderless">
                                        <tr>
                                            <th>
                                                @if (Model.vehicle.airCondition)
                                                {
                                                    <i class="material-icons" style="font-size:20px;color:gold">
                                                        check
                                                    </i>

                                                }
                                                else
                                                {
                                                    <i class="material-icons" style="font-size:20px;color:darkred">
                                                        close
                                                    </i>

                                                }
                                            </th>
                                            <td>A/C</td>
                                        </tr>
                                        <tr>
                                            <th>
                                                @if (Model.vehicle.airCondition)
                                                {
                                                    <i class="material-icons" style="font-size:20px;color:gold">
                                                        check
                                                    </i>
                                                }
                                                else
                                                {

                                                    <i class="material-icons" style="font-size:20px;color:darkred">
                                                        close
                                                    </i>
                                                }
                                            </th>
                                            <td>@Html.DisplayNameFor(model => model.vehicle.AirBag).ToString().ToUpper()</td>
                                        </tr>
                                        <tr>
                                            <th>
                                                @if (Model.vehicle.CDPlayer)
                                                {
                                                    <i class="material-icons" style="font-size:20px;color:gold">
                                                        check
                                                    </i>
                                                }
                                                else
                                                {

                                                    <i class="material-icons" style="font-size:20px;color:darkred">
                                                        close
                                                    </i>
                                                }
                                            </th>
                                            <td>@Html.DisplayNameFor(model => model.vehicle.CDPlayer).ToString().ToUpper()</td>
                                        </tr>
                                        <tr>
                                            <th>
                                                @if (Model.vehicle.PowerSteering)
                                                {
                                                    <i class="material-icons" style="font-size:20px;color:gold">
                                                        check
                                                    </i>
                                                }
                                                else
                                                {

                                                    <i class="material-icons" style="font-size:20px;color:darkred">
                                                        close
                                                    </i>
                                                }
                                            </th>
                                            <td>@Html.DisplayNameFor(model => model.vehicle.PowerSteering).ToString().ToUpper()</td>
                                        </tr>
                                        <tr>
                                            <th>
                                                @if (Model.vehicle.BreakAssist)
                                                {
                                                    <i class="material-icons" style="font-size:20px;color:gold">
                                                        check
                                                    </i>
                                                }
                                                else
                                                {

                                                    <i class="material-icons" style="font-size:20px;color:darkred">
                                                        close
                                                    </i>
                                                }
                                            </th>
                                            <td>@Html.DisplayNameFor(model => model.vehicle.BreakAssist).ToString().ToUpper()</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>


                        </div>
                    </div>



                    <div class="review-area">

                        @{
                            bool empty = true;

                            if (Model.vehicle.Reviews != null)
                            {
                                double total = 0;
                                double avg = 0.0;

                                foreach (var r in Model.vehicle.Reviews)
                                {
                                    total += r.Rating;
                                }
                                if (Model.vehicle.Reviews.Count() > 0)
                                {
                                    avg = (total / Model.vehicle.Reviews.Count());
                                }
                                else
                                {
                                    avg = 0;
                                }
                                empty = false;
                                <div class="rating-section-header">
                                    <p class="header">Ratings and review</p>
                                    <div class="form-inline" role="form">
                                        <div class="form-group">
                                            <h1>@avg.ToString("#.##")</h1>
                                            <input value="@avg" readonly type="hidden" class="rating" data-glyphicon="false" data-star-captions="{}" data-default-caption="" min=0 max=5 step=0.1 data-size="">
                                        </div>
                                    </div>
                                    <small>@Model.vehicle.Reviews.Count() reviews</small>
                                </div>

                                <div class="comment-section">
                                    @foreach (var review in Model.vehicle.Reviews)
                                    {
                                        <div class="comment">
                                            <p class="username">@review.Username</p>
                                            <input value="@review.Rating" readonly type="hidden" class="rating" data-glyphicon="false" data-star-captions="{}" data-default-caption="@review.Created.ToString("MMM, dd yyyy")" data-size="" min=0 max=5 step=0.1>
                                            <p>@review.Reviews</p>
                                        </div>
                                        <hr />
                                    }
                                </div>

                                <h6>Add a review</h6>
                            }

                            else
                            {
                                <h3>Be the first to review “@Model.vehicle.make @Model.vehicle.model”</h3>
                            }

                            bool disable = false;
                            if (!empty && User.Identity.IsAuthenticated && Model.vehicle.Reviews.Any(x => x.Email == User.Identity.Name && User.IsInRole("Dealer")))
                            {
                                disable = true;
                            }
                        }


                        <div class="review-form">
                            <form action="/Vehicles/Review" disable id="review-form" method="POST">
                                <div class="review-star">
                                    <p class="rating">
                                        <input id="star-rating" value="" disabled="@disable" required type="hidden" name="Rating" class="rating" data-glyphicon="false" data-star-captions="{}" data-default-caption="" data-size="" min=0 max=5 step=0.1>
                                    </p>
                                </div>


                                @{
                                    if (!User.Identity.IsAuthenticated)
                                    {
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6">
                                                <div class="name-input">
                                                    <input type="text" disabled="@disable" required name="Username" placeholder="Full Name">
                                                </div>
                                            </div>

                                            <div class="col-lg-6 col-md-6">
                                                <div class="email-input">
                                                    <input type="email" required disabled="@disable" name="Email" placeholder="Email Address">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <input type="hidden" name="Username" disabled="@disable" value="@User.Identity.Name">

                                        <input type="hidden" name="Email" disabled="@disable" value="@User.Identity.Name">
                                    }
                                }


                                <input type="hidden" name="VehicleId" disabled="@disable" value="@Model.vehicle.Id">
                                <div class="message-input">
                                    <textarea name="Reviews" disabled="@disable" required cols="20" rows="2" placeholder="Write Your Feedback Here!"></textarea>
                                </div>

                                <div class="input-submit">
                                    <button type="submit">Submit</button>
                                    <button type="reset" id="btn-reset">Clear</button>
                                </div>
                            </form>


                        </div>

                    </div>
                </div>
            </div>
        </div>
        @Html.Partial("_sidebar", Model.vehicles)

    </div>
</div>

@{ if (User.Identity.IsAuthenticated)
    {

        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                <div class="modal-content">

                    <div class="modal-body">
                        @using (Html.BeginForm("Book", "Bookings", FormMethod.Post, new { Name = "book-form", data_toggle = "validator", Id = "bookingForm" }))
                        {@Html.AntiForgeryToken()

                        <!-- Smart Wizard HTML -->
                        <div id="smartwizard">
                            <ul>
                                <li><a href="#step-1">Booking info<br /><small>Pickup/return location</small></a></li>
                                <li><a href="#step-2">Payment<br /><small>Payment information</small></a></li>
                                <li><a href="#step-3">Overview<br /><small>Review and submit</small></a></li>
                            </ul>

                            <div style="padding:10px">
                                <div id="step-1" class="">
                                    <div class="row" id="form-step-1">

                                        <div class="col-lg-6">
                                            <input type="hidden" name="Booking.VehicleId" Id="VehicleId" value="@Model.vehicle.Id" />
                                            <input type="hidden" name="Booking.UserId" id="UserId" value="@User.Identity.GetUserId()" />
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Booking.PickUpDate)
                                                @Html.TextBoxFor(m => m.Booking.PickUpDate, new { @Class = "form-control", Id = "fromdate", Placeholder = "mm/dd/yyyy" })
                                                @Html.ValidationMessageFor(m => m.Booking.PickUpDate, "", new { @class = "text-danger" })
                                                <div class="help-block with-errors"></div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Booking.PickUpLocationAddress)
                                                @Html.TextBoxFor(m => m.Booking.PickUpLocationAddress, new { @Class = "form-control", Placeholder = "eg. Apt2, Mandeville Manchester.." })
                                                @Html.ValidationMessageFor(m => m.Booking.PickUpLocationAddress, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Booking.ReturnDate)
                                                @Html.TextBoxFor(m => m.Booking.ReturnDate, new { @Class = "form-control", Id = "todate", Placeholder = "mm/dd/yyyy" })
                                                @Html.ValidationMessageFor(m => m.Booking.ReturnDate, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Booking.ReturnLocationAddress)
                                                @Html.TextBoxFor(m => m.Booking.ReturnLocationAddress, new { @Class = "form-control", Placeholder = "eg. Apt2, Mandeville Manchester.." })
                                                @Html.ValidationMessageFor(m => m.Booking.ReturnLocationAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <div id="step-2" class="">
                                    <div class="row form-step-2">
                                        <div class="col-md-12 order-md-1">
                                            <div class="mb-3">
                                                @Html.LabelFor(m => m.Booking.BillingAddress.StrLine1)
                                                @Html.TextBoxFor(m => m.Booking.BillingAddress.StrLine1, new { @Class = "form-control", Placeholder = "eg. Apt2, Mandeville Manchester.." })
                                                @Html.ValidationMessageFor(m => m.Booking.BillingAddress.StrLine1, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="mb-3">
                                                @Html.LabelFor(m => m.Booking.BillingAddress.StrLine2)
                                                @Html.TextBoxFor(m => m.Booking.BillingAddress.StrLine2, new { @Class = "form-control", Placeholder = "eg. Apt2, Mandeville Manchester.." })
                                                @Html.ValidationMessageFor(m => m.Booking.BillingAddress.StrLine2, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="row">
                                                <div class="col-md-5 mb-3">
                                                    @Html.LabelFor(m => m.Booking.BillingAddress.Country)
                                                    <select class="custom-select d-block w-100" name="Booking.BillingAddress.Country" id="country">
                                                        <option value="">Choose...</option>
                                                        <option>Jamaica</option>
                                                        <option>United States</option>
                                                    </select>
                                                </div>

                                                <div class="col-md-4 mb-3">
                                                    @Html.LabelFor(m => m.Booking.BillingAddress.State)
                                                    <select class="custom-select d-block w-100" id="state" name="Booking.BillingAddress.State">
                                                        <option value="">Choose State</option>
                                                        <option>Kingston</option>
                                                    </select>
                                                </div>

                                                <div class="col-md-3 mb-3">
                                                    @Html.LabelFor(m => m.Booking.BillingAddress.ZIP)
                                                    @Html.TextBoxFor(m => m.Booking.BillingAddress.ZIP, new { @Class = "form-control", Placeholder = "eg. Apt2, Mandeville Manchester.." })
                                                    @Html.ValidationMessageFor(m => m.Booking.BillingAddress.ZIP, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <hr class="mb-4">
                                            <div class="custom-control custom-checkbox">
                                                <input type="checkbox" class="custom-control-input" disabled id="save-info">
                                                <label class="custom-control-label" for="save-info">Save this information for next time</label>
                                            </div>
                                            <hr class="mb-4">

                                            <h4 class="mb-3">Payment</h4>

                                            <div class="d-block my-3">
                                                <div class="custom-control custom-radio">
                                                    <input id="credit" name="paymentMethod" type="radio" class="custom-control-input" checked disabled>
                                                    <label class="custom-control-label" for="credit">Credit card</label>
                                                </div>
                                                <div class="custom-control custom-radio">
                                                    <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" disabled>
                                                    <label class="custom-control-label" for="debit">Debit card</label>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6 mb-3">
                                                    <label for="cc-name">Name on card</label>
                                                    <input type="text" class="form-control" id="cc-name" placeholder="" disabled>
                                                    <small class="text-muted">Full name as displayed on card</small>
                                                    <div class="invalid-feedback">
                                                        Name on card is required
                                                    </div>
                                                </div>
                                                <div class="col-md-6 mb-3">
                                                    <label for="cc-number">Credit card number</label>
                                                    <input type="text" class="form-control" id="cc-number" placeholder="" disabled>
                                                    <div class="invalid-feedback">
                                                        Credit card number is required
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-3 mb-3">
                                                    <label for="cc-expiration">Expiration</label>
                                                    <input type="text" class="form-control" id="cc-expiration" placeholder="" disabled>
                                                    <div class="invalid-feedback">
                                                        Expiration date required
                                                    </div>
                                                </div>
                                                <div class="col-md-3 mb-3">
                                                    <label for="cc-expiration">CVV</label>
                                                    <input type="text" class="form-control" id="cc-cvv" placeholder="" disabled>
                                                    <div class="invalid-feedback">
                                                        Security code required
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div id="step-3" class="">

                                    <div class="row justify-content-center card form-step-3">

                                        <div class="col-md-12 card-body" id="overview-area">

                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    }
                    </div>

                </div>
            </div>
        </div>
    }
    else
    {

        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-md">
                @using (Html.BeginForm("Book", "Vehicles", FormMethod.Post, htmlAttributes: new { @Id = "bookingForm" }))
                {@Html.AntiForgeryToken()

                <div class="modal-content">
                    <div class="modal-header">
                        <p>Login to continue</p>
                    </div>
                    <div class="modal-body">
                        <p>Login to start booking vehicles. <a href="/Account/Login?ReturnUrl=/vehicles/Details/@Model.vehicle.Id">Login</a></p>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
            </div>
        </div>
    } }



@section scripts{
    <script src="~/Scripts/star-rating.js"></script>
    <script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/Content/SetupWizard/js/jquery.smartWizard.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>



    <script>
        $(function () {
            //star rating
            $("#star-rating").on("rating.change", function (event, value, caption) {
                var ratingValue = $('#hdfRatingValue').val();
                ratingValue = value;
                alert(ratingValue);
            });

            var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
            //date input formats
            //format date input field
            $('#fromdate').datepicker({
                uiLibrary: 'bootstrap4',
                iconsLibrary: 'fontawesome',
                minDate: today,
                maxDate: function () {
                    return $('#endDate').val();
                }
            });

            $('#todate').datepicker({
                uiLibrary: 'bootstrap4',
                iconsLibrary: 'fontawesome',
                minDate: today,
                maxDate: function () {
                    return $('#endDate').val();
                }
            });
            $('#from').datepicker({
                uiLibrary: 'bootstrap4',
                iconsLibrary: 'fontawesome',
                minDate: today,
                maxDate: function () {
                    return $('#endDate').val();
                }
            });
            $('#to').datepicker({
                uiLibrary: 'bootstrap4',
                iconsLibrary: 'fontawesome',
                minDate: today,
                maxDate: function () {
                    return $('#endDate').val();
                }
            });

            //estimate cost
            $("#form-estimate").on("submit", function (e) {
                e.preventDefault();
                $.ajax({
                    type: "post",
                    data: $(this).serialize(),
                    url: "/Bookings/EstimateCharges",
                    success: function (res) {
                        $("#result-area").html("<P># of days:" + res.Days + " </P><p>Tax: " + res.TAX + "<p/><p>Total: " + res.charge + "<p/><h4><small>you pay: </small><span style='color:green'>" + res.Total + "<span></h4>");
                    }
                });
            });

            $("#review-form").on("submit", function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/Vehicles/Review/",
                    data: $(this).serialize(),
                    success: function (data) {
                        $("#btn-reset").click();
                        var html = '<div class="comment">' +
                            '<p class="username">' + data.Username + '<small>&nbsp;Just now</small></p>' +
                            '<input value="' + data.Rating + '" readonly type="hidden" class="rating" data-glyphicon="false" data-star-captions="{}" data-default-caption="{rating} Stars" data-size="" min=0 max=5 step=0.1 data-size="sm">' +
                            ' <p class="user-review">' + data.Reviews + '</p>' +
                            '</div><hr>';
                        $("#comment-section")
                            .append(html)
                            .hide()
                            .fadeIn(2000)

                    },
                    error: function (err) {
                        alert(err);
                    }

                });


            });

        });//end ready function

    </script>

    <script type="text/javascript">
        // Smart Wizard
        $('#smartwizard').smartWizard({
            selected: 0,
            theme: 'dots',
            transitionEffect: 'fade',
        });

        $("#smartwizard").on("showStep", function (e, anchorObject, stepNumber, stepDirection, stepPosition) {
            if (stepPosition != 'final') {
                $('.sw-btn-next').attr("type", "button").text("next").removeClass("btn-success").removeClass("btn-success").addClass("disabled");
            }
            //check form validation

            if (stepPosition === 'final') {
                $('.sw-btn-next').text("finish").removeClass("btn-secondary").addClass("btn-success").removeClass("disabled")
                    .on("click", function () {
                        $("#bookingForm").submit();
                    });
                var BookingObj = {
                    VehicleId: $("#VehicleId").val(),
                    UserId: $("#UserId").val(),
                    PickUpDate: $("#fromdate").val(),
                    ReturnDate: $("#todate").val(),
                    PickUpLocationAddress: $("#Booking_PickUpLocationAddress").val(),
                    ReturnLocationAddress: $("#Booking_ReturnLocationAddress").val(),
                }

                $.ajax({
                    type: "post",
                    url: "/Bookings/Overview",
                    data: BookingObj,
                    success: function (data) {
                        var html = '<div class="card-header"><h3 style="text-align:center">' + data.VehicleName + '</h3></div>' +
                            ' <small>Verify your booking information</small>' +
                            '<p>Renting for ' + data.NumberOfDays + ' day/s ' + data.Dates + '</p>' +
                            '<p><b>Pickup location:</b>' + data.PickUpAddress + '</p>' +
                            '<p><b>Return location:</b>' + data.ReturnAddress + '</p>' +
                            '<p style="font-weight:bold">Tax added: ' + data.Tax + '</p>' +
                            '<h3 style="font-weight:bold;color:green; text-align:center">Total Charge: ' + data.TotalCharge + '</h3>';
                        $("#overview-area").html(html);

                    },

                    error: function (err) {
                        console.log(err);
                    }
                });
            }
        });

        //booking form submit
        $("#bookingForm").on("submit", function (e) {
            e.preventDefault();
            var formData = $("#bookingForm").serialize();
            $.ajax({
                type: 'post',
                data: formData,
                url: "/Bookings/Book/",

                success: function (data) {
                    
                        $("#book-button").prop('disabled', true).attr('data-toggle', '').text('Booked')
                        $('#exampleModal').modal('hide');

                        Swal.fire({
                            title: '<strong>Booking success!</strong>',
                            html: 'Please check your email for a receipt. You can visit your <a class="badge badge-info" href="/Account/Profile">dashboard to view your bookings</a>',
                            icon: 'success',
                            showCloseButton: false,
                            showConfirmButton: false
                        })
                    
                },
                error: function (err) {
                    Swal.fire({
                        title: '<strong>Oops!</strong>',
                        html: 'Something went wrong while making your booking.',
                        icon: 'error',
                        showCloseButton: false,
                        showConfirmButton: false
                    })

                }
            });
        });

    </script>
}